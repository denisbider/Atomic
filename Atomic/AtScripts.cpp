// File generated by ScriptPack. Overwritten in build. Do not edit manually

#include "AtIncludes.h"
#include "AtScripts.h"


namespace At
{

Seq c_js_AtDbAdm_Browse {
	"{ const editLink = Elem('editLink'); const entityJson = Elem('entityJson'); const entitySave = Elem('entitySave'); editLink.addEventListener('click', function (e) { if (entityJson."
	"disabled) { editLink.innerHTML = 'Cancel'; entityJson.disabled = false; entitySave.disabled = false; } else { editLink.innerHTML = 'Edit'; entityJson.disabled = true; entitySave.di"
	"sabled = true; } e.preventDefault(); }); }",
	402 };

Seq c_js_AtHtmlBuilder_CheckboxEnable {
	"const checkboxElem = Elem(arg.checkboxId); const otherElem = Elem(arg.otherId); checkboxElem.addEventListener('click', function () { otherElem.disabled = !checkboxElem.checked; });"
	"",
	180 };

Seq c_js_AtHtmlBuilder_Intro {
	"'use strict'; function Elem(id) { return document.getElementById(id); }",
	71 };

Seq c_js_AtHtmlBuilder_MultiUpload {
	"const idPrefix = arg.idPrefix; const section = Elem(idPrefix + 'Section'); let nrDivs = 0; let lastDivNr = 0; const MultiUpload_AddDiv = function () { const nr = lastDivNr + 1; con"
	"st inElemId = idPrefix + nr; const inDiv = document.createElement('div'); const inElem = document.createElement('input'); inElem.setAttribute('type', 'file'); inElem.setAttribute('"
	"id', inElemId); inElem.setAttribute('name', inElemId); inElem.setAttribute('multiple', ''); inElem.addEventListener('change', function () { MultiUpload_OnAction(inDiv, inElem, nr);"
	" }); inDiv.appendChild(inElem); section.appendChild(inDiv); lastDivNr = nr; nrDivs = nrDivs + 1; }; const MultiUpload_OnAction = function (inDiv, inElem, nr) { if (inElem.value != "
	"'' && nr == lastDivNr) { let rmLink = document.createElement('a'); rmLink.setAttribute('href', '#'); rmLink.innerHTML = 'Remove'; rmLink.addEventListener('click', function (e) { Mu"
	"ltiUpload_RemoveDiv(inDiv); e.preventDefault(); }); inDiv.appendChild(rmLink); MultiUpload_AddDiv(); } }; const MultiUpload_RemoveDiv = function (inDiv) { inDiv.parentElement.remov"
	"eChild(inDiv); nrDivs = nrDivs - 1; if (nrDivs == 0) { MultiUpload_AddDiv(); } }; MultiUpload_AddDiv();",
	1183 };

Seq c_js_AtHtmlBuilder_PopUpLinks {
	"{ const elems = document.getElementsByClassName('popUpLink'); for (let i = 0; i < elems.length; ++i) { const elem = elems[i]; if (elem.tagName.toLowerCase() == 'a') { elem.addEvent"
	"Listener('click', function (e) { let w = window.open(); w.opener = null; w.location = elem.href; e.preventDefault(); }); } } }",
	306 };

Seq c_js_AtHtmlBuilder_ReloadElem {
	"function ReloadReqHandler(req, outElemId, statusElemId, method, url, retryMs) { if (req.readyState == 4) { if (req.status == 200 || req.status == 203 || req.status == 503) { if (re"
	"q.status != 503) { Elem(outElemId).innerHTML = r.responseText; Elem(statusElemId).innerHTML = ''; } if (req.status != 200) { setTimeout(function() { return SendReloadReq(outElemId,"
	" statusElemId, method, url, retryMs); }, retryMs); } } else { Elem(statusElemId).innerHTML = '[ Dynamic page update failed: Unexpected HTTP response code: ' + req.status + ']'; } }"
	" } function SendReloadReq(outElemId, statusElemId, method, url, retryMs) { var req = new XMLHttpRequest; if (req == null) { Elem(statusElemId).innerHTML = '[ Dynamic page update fa"
	"iled: XMLHttpRequest is null ]'; } else { req.open(method, url, true); req.onreadystatechange = function() { return ReloadReqHandler(req, outElemId, statusElemId, method, url, retr"
	"yMs); }; req.send(); } } function ReloadElem(outElemId, statusElemId, method, url, firstWaitMs, retryMs) { setTimeout(function() { return SendReloadReq(outElemId, statusElemId, met"
	"hod, url, retryMs); }, firstWaitMs); }",
	1118 };

Seq c_js_AtHtmlBuilder_ReloadElem_Call {
	"const outElemId = arg.outElemId; const statusElemId = arg.statusElemId; const url = arg.url; const method = arg.method || 'GET'; const firstWaitMs = arg.firstWaitMs || 5000; const "
	"retryMs = arg.retryMs || 3000; Elem(statusElemId).innerHTML = '[ Loading... ]'; ReloadElem(outElemId, statusElemId, method, url, firstWaitMs, retryMs);",
	331 };

Seq c_js_AtHtmlBuilder_ToggleShowDiv {
	"const crumbDiv = Elem(arg.crumbDivId); const crumbLink = Elem(arg.crumbLinkId); const mainDiv = Elem(arg.mainDivId); const mainLink = Elem(arg.mainLinkId); crumbLink.addEventListen"
	"er('click', function (e) { crumbDiv.style.display = 'none'; mainDiv.style.display = 'block'; e.preventDefault(); }); mainDiv.addEventListener('click', function (e) { crumbDiv.style"
	".display = 'block'; mainDiv.style.display = 'none'; e.preventDefault(); });",
	435 };

Seq c_js_AtSmtpEntities_SenderCfg {
	"{ const inputIds = [ 'smtpSender_relayHost', 'smtpSender_relayPort', 'smtpSender_relayImplicitTls', 'smtpSender_relayTlsRequirement', 'smtpSender_relayAuthType', 'smtpSender_relayU"
	"sername', 'smtpSender_relayPassword' ]; const checkbox = Elem('smtpSender_useRelay'); const OnCheckbox = function () { inputIds.forEach(function (id) { Elem(id).disabled = !checkbo"
	"x.checked; }); }; checkbox.addEventListener('click', OnCheckbox); OnCheckbox(); }",
	441 };

Seq c_css_AtDbAdm {
	"body { color: #ddd; background: #222; padding: 30px 50px 0px 50px; max-width: 80em; font-family: \"Trebuchet MS\", Arial; font-size: 14px; } .submitErr { color: #f85; } a { color: "
	"#7d9; } h1,h2,h3,h4,h5,h6 { color: #8bf; font-size: 24px; margin-top: 21px; margin-bottom: 14px; } table { border-collapse: collapse; } table.border td, table.border th { border: 1"
	"px solid #444; } td,th { padding: 5px; vertical-align: top; } input,textarea,select { color: #eee; background: #333; border: 1px solid #444; padding: 3px 6px 3px 6px; } input[type="
	"'text'] { width: 40em; }",
	562 };

}
